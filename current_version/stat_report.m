function outtable = stat_report(output)
% TODO
%   - Function to get sleep onset has hardcoded sampling rate and time down

ev_col = {'Event' ; 'Sleep Efficiency' ; 'WASO' ; 'WASO' ; 'WASO' ; 'Sleep Onset'; 'PI' ;...
    'CLM' ; 'CLM' ; 'PLM' ; 'PLM' ; 'CLM IMI' ;...
    'CLM IMI' ; 'PLM IMI' ; 'PLM IMI' ; 'CLM Dur' ; 'CLM Dur' ;...
    'PLM Dur' ; 'PLM Dur'};

met_col = {'Metric' ; '' ; 'num awakenings' ; 'time (min)' ; 'avg time' ; 'time (min)' ;'' ;...
    'num' ; 'num/hr' ; 'num' ; 'num/hr' ; 'log avg' ;...
    'log std' ; 'log avg' ; 'log std' ; 'avg' ; 'std' ;...
    'avg' ; 'std'};
 
slonset = getslonset(output.up2Down1,output.fs); 
gen_col = {'General' ; output.sleepEff ; output.WASOnum; output.WASOdur;... 
    output.WASOavgdur ; slonset; output.PI ; '-' ; '-' ; '-' ; '-' ; '-' ;...
    '-' ; '-' ; '-' ; '-' ; '-' ; '-' ; '-'};

tib_col = {sprintf(['TIB\n' datestr(output.TRT/60/24,'HH:MM:SS')]) ;...
    '-' ; '-' ; '-' ; '-' ; '-'; '-';...    
    output.CLMnum ; sprintf('%.2f',output.CLMhr) ;...
    output.PLMnum ; sprintf('%.2f',output.PLMhr) ;...
    sprintf('%.2f',exp(mean(log(output.bCLM(output.bCLM(:,4)<=90,4)))));...
    sprintf('%.2f',exp(std(log(output.bCLM(output.bCLM(:,4)<=90,4)))));...
    sprintf('%.2f',exp(mean(log(output.PLM(output.PLM(:,4)<=90,4)))));...
    sprintf('%.2f',exp(std(log(output.PLM(output.PLM(:,4)<=90,4)))));...
    sprintf('%.2f',mean(output.bCLM(:,3)));...
    sprintf('%.2f',std(output.bCLM(:,3)));...
    sprintf('%.2f',mean(output.PLM(:,3))); 
    sprintf('%.2f',std(output.PLM(:,3)))};

tst_col = {sprintf(['TST\n' datestr(output.TST/60/24,'HH:MM:SS')]) ;...
    '-' ; '-' ; '-' ; '-' ; '-' ; '-';...
    output.CLMSnum ; sprintf('%.2f',output.CLMShr) ;...
    output.PLMSnum ; sprintf('%.2f',output.PLMShr) ;...
    sprintf('%.2f',exp(mean(log(output.bCLM(output.bCLM(:,4)<=90 & output.bCLM(:,6)==1,4)))));...
    sprintf('%.2f',exp(std(log(output.bCLM(output.bCLM(:,4)<=90 & output.bCLM(:,6)==1,4)))));...
    sprintf('%.2f',exp(mean(log(output.PLM(output.PLM(:,4)<=90 & output.PLM(:,6)==1,4)))));...
    sprintf('%.2f',exp(std(log(output.PLM(output.PLM(:,4)<=90 & output.PLM(:,6)==1,4)))));...
    sprintf('%.2f',mean(output.bCLM(output.bCLM(:,6)==1,3)));... 
    sprintf('%.2f',std(output.bCLM(output.bCLM(:,6)==1,3)));...
    sprintf('%.2f',mean(output.PLM(output.PLM(:,6)==1,3)));... 
    sprintf('%.2f',std(output.PLM(output.PLM(:,6)==1,3)))};

wake_col = {sprintf(['Wake\n' datestr((output.TRT-output.TST)/60/24,'HH:MM:SS')]) ;...
    '-' ; '-' ; '-' ; '-' ; '-' ; '-';...
    output.CLMWnum ; sprintf('%.2f',output.CLMWhr) ;...
    output.PLMWnum ; sprintf('%.2f',output.PLMWhr) ;...
    sprintf('%.2f',exp(mean(log(output.bCLM(output.bCLM(:,4)<=90 & output.bCLM(:,6)==2,4)))));...
    sprintf('%.2f',exp(std(log(output.bCLM(output.bCLM(:,4)<=90 & output.bCLM(:,6)==2,4)))));...
    sprintf('%.2f',exp(mean(log(output.PLM(output.PLM(:,4)<=90 & output.PLM(:,6)==2,4)))));...
    sprintf('%.2f',exp(std(log(output.PLM(output.PLM(:,4)<=90 & output.PLM(:,6)==2,4)))));...
    sprintf('%.2f',mean(output.bCLM(output.bCLM(:,6)==2,3)));... 
    sprintf('%.2f',std(output.bCLM(output.bCLM(:,6)==2,3)));...
    sprintf('%.2f',mean(output.PLM(output.PLM(:,6)==2,3)));... 
    sprintf('%.2f',std(output.PLM(output.PLM(:,6)==2,3)))};

outtable = table(ev_col,met_col,gen_col,tib_col,tst_col,wake_col);

% Plotting procedure
log_labels = {'2s','10s','20s','40s','60s','90s'};

figure('units','normalized','position',[.3 .3 .4 .4],'Visible','off')

subplot(1,2,1);
% HEY YOU, I CHANGED THIS SO NOW IT PLOTS ALL CLMnr EXCEPT > 90 IMI
CLMS = output.bCLM(output.bCLM(:,6) == 1,:);
hst = histogram(log(CLMS(CLMS(:,4) <= 90,4)),40);
title('CLMS intermovement intervals; log scale')
xlim([0,log(90)]); ylim([0,max(20,max(hst.Values))]);
set(gca,'xtick',[log(2),log(10),log(20),log(40),log(60),log(90)]);
set(gca,'xticklabel',log_labels);

subplot(1,2,2);
scatter(CLMS(CLMS(:,4)<=90,3),CLMS(CLMS(:,4)<=90,4));
% scatter(CLMS(:,3),CLMS(:,4));
title('CLMS IMI vs Duration');
xlabel('Duration (s)'); ylabel('IMI (s)');

%% Report Generation
assignin('base','outcell',[table2cell(outtable)]);
assignin('base','ID',output.patient_id);
assignin('base','today_date',datestr(today));
assignin('base','tmpo',output);
report('generate_report',['-o' output.patient_id]);
end

function sleep_onset = getslonset(ep)

ep = (ep > 0);
x = find(ep);

% just check for two consecutive epochs of sleep
try
    while x(2) - x(1) ~= 1
        x = x(2:end);
    end
catch
    error('Subject does not have at least one minute of sleep');
end
sleep_onset = x(1);
end